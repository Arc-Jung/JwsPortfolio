{"changed":false,"filter":false,"title":"view.py","tooltip":"/BuMarket/BuMarket/view.py","value":"#-*- coding: utf-8 -*- \n# 한글을 사용하면 위에 꼭 써야함\nfrom django.core.exceptions import ObjectDoesNotExist, MultipleObjectsReturned\nfrom rest_framework import filters\nfrom rest_framework import viewsets\nfrom rest_framework import permissions\n#from rest_framework.decorators import detail_route\nfrom rest_framework.response import Response\nfrom .forms import UserJoinForm\nfrom .models import UserModel, ProductModel, SaleModel, LikeModel # Model import\nfrom .serializers import UserSerializer, ProductSerializer\nfrom django.http import JsonResponse\nfrom django.http import HttpResponse\nimport logging\nlogger = logging.getLogger('test')\nfrom django.contrib.auth import login, authenticate #20191002\nfrom django.http import HttpResponse #20191004\nfrom rest_framework.permissions import AllowAny\nfrom rest_framework.response import Response\nfrom rest_framework.schemas import SchemaGenerator\nfrom rest_framework.views import APIView\nfrom rest_framework_swagger import renderers\nfrom rest_framework import status\nfrom rest_framework.response import Response\n####################################################################\n\n\ndef get_extra1(request):\n    return HttpResponse(\"extra1\")\n    \ndef get_list_by_user(request, username):\n    print(\"username : \", username)\n    return HttpResponse(\"{}의 블로그 글 리스트가 출력됩니다!\".format(username))\n    \ndef test(request, username):\n    return HttpResponse(\"넘어온 데이터 : \"+username)\n    \n    \n####################################################################\n\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = UserModel.objects.all()\n    serializer_class = UserSerializer # JSON 으로 파싱하는 과정이다.\n    \n    def create(self, request, *args, **kwargs):\n        userForm = UserJoinForm(request.POST) # 안드로이드에서 POST 방식으로 발송\n        result = {} # 장고가 JSON 데이터를 담아서 보낼 배열\n        idMultipleObject = True\n        \n        if userForm.is_valid():\n            try:\n                UserModel.objects.get(id=userForm.data['UserId'])\n                idMultipleObject = False\n                UserModel.objects.get(Password=userForm.data['Password'])\n                UserModel.objects.get(PasswordCheck=userForm.data['PasswordCheck'])\n                if userForm.data['Password'] != userForm.data['PasswordCheck']: # 패스워드와 패스워드 확인 값이 일치하지 않으면 에러 메시지를 표시한다.\n                    logger.error('PasswordCheck Error')\n                else:\n                    UserModel.objects.get(UserName=userForm.data['UserName'])\n                    UserModel.objects.get(Phone=userForm.data['Phone'])\n                    UserModel.objects.get(KakaoId=userForm.data['KakaoId'])\n                    UserModel.objects.get(Email=userForm.data['Email'])\n            except MultipleObjectsReturned as e:\n                logger.error('Insert Error')\n                result['result'] = 'Insert Error'\n                return JsonResponse(result)\n            \n            user = userForm.save() # 저장\n            result['result'] = 'complete'\n            result['UserId'] = user.UserId\n            result['Password'] = user.Password\n            result['UserName'] = user.UserName\n            result['Phone'] = user.Phone\n            result['KakaoId'] = user.KakaoId\n            result['Email'] = user.Email\n            return JsonResponse(result)\n\n        else :\n            logger.error('Join Error')\n            result['result'] = 'Join Error'\n            return JsonResponse(result)\n\n\n####################################################################\n\n\nclass LoginViewSet(viewsets.ModelViewSet):\n    queryset = UserModel.objects.all()\n    serializer_class = UserSerializer # JSON 으로 파싱하는 과정이다.\n    \n    def userlogin(self, request, *args, **kwargs): # POST\n        result = {} # 장고가 JSON 데이터를 담아서 보낼 배열\n        id = request.POST['id'] # 안드로이드에서 POST 방식으로 발송\n        pw = request.POST['pw'] # 안드로이드에서 POST 방식으로 발송\n        usercheck = UserModel.objects.get(UserId=id, Password=pw) \n        # 유저모델 -> 데이터베이스 -> 오브젝트 -> Get -> UserId의 값을 id 에, Password의 값을 pw에 저장한다.\n        # usercheck = authenticate(UserId=id, Password=pw) # 데이터 베이스의 컬럼값과 포스트로 보내진 데이터를 비교\n        if (usercheck != ''): # 데이터베이스가 값을 성공적으로 불러왔다면 로그인 성공\n            result['id'] = UserModel.UserId\n            result['pw'] = UserModel.Password\n            result['result'] = 'Login seuccess'\n            return JsonResponse(result)\n        else: # 데이터베이스가 값을 가져오지 못하였다면 로그인 실패\n            result['result'] = 'Login fail'\n            return JsonResponse(result)\n            \n    def userlogout(self, request, *args, **kwargs):\n        return ''\n\n    def usermypage(self, request, *args, **kwargs):\n        return ''\n        \n    def usermodify(self, request, *args, **kwargs):\n        return ''\n        \n        \n####################################################################\n\n\nclass LikeViewSet(viewsets.ModelViewSet):\n    queryset = ProductModel.objects.all()\n    serializer_class = ProductSerializer # JSON 으로 파싱하는 과정이다.\n    \n    def likeproduct(self, request, *args, **kwargs):\n        return ''\n\n\n####################################################################\n\n\nclass ProductViewSet(viewsets.ModelViewSet):\n    queryset = ProductModel.objects.all()\n    serializer_class = ProductSerializer # JSON 으로 파싱하는 과정이다.\n    #permission_class = (permissions.IsAuthenticated)\n    \n    def productlist(self, request, *args, **kwargs):\n        productpage = {} # 장고가 JSON 데이터를 담아서 보낼 배열\n        if request.method == 'POST':\n            return ''\n        else:\n            return ''\n        \n    def delete(self, request, *args, **kwargs):\n        return ''\n        \n    def sale(self, request, *args, **kwargs):\n        return ''\n        \n    def shop(self, request, *args, **kwargs):\n        return ''\n        \n    def serch(self, request, *args, **kwargs):\n        return ''\n     \n     \n####################################################################\n        \n        \nclass SaleViewSet(viewsets.ModelViewSet):\n    queryset = ProductModel.objects.all()\n    serializer_class = ProductSerializer # JSON 으로 파싱하는 과정이다.\n    \n    def saleview(self, request, *args, **kwargs):\n        return ''\n        \n####################################################################\n\nclass ImageViewSet(viewsets.ModelViewSet):\n    queryset = ProductModel.objects.all()\n    serializer_class = ProductSerializer # JSON 으로 파싱하��� 과정이다.\n    \n    def productupload(self, request, *args, **kwargs):\n        return ''\n        \n    def profileupload(self, request, *args, **kwargs):\n        return ''\n        \n    def productview(self, request, *args, **kwargs):\n        return ''\n        \n    def profileview(self, request, *args, **kwargs):\n        return ''\n        \n####################################################################\n        \n        \nclass TestViewSet(viewsets.ModelViewSet):\n    queryset = UserModel.objects.all()\n    serializer_class = UserSerializer # JSON 으로 파싱하는 과정이다.\n    \n    #def testview(self, request, *args, **kwargs):\n        #return ('UserId', 'Password', 'UserName', 'Phone', 'KakaoId', 'Email')\n    \n# JSON 예시\n    def posttest(self, request, word):\n        self.get_\n        return JsonResponse({\n            'message' : '안녕 파이썬 장고',\n            'items' : ['파이썬', '장고', 'AWS', 'EC2'],\n        }, json_dumps_params = {'ensure_ascii': True})\n        \n    def testDatabaseDef(requestPId): # Get : :8000/database?requestPId=1\n        requestData=requestPId.GET.get(\"requestPId\");\n        result = {} # 장고가 JSON 데이터를 담아서 보낼 배열\n        queryset = ProductModel.objects.all()\n    \n        #print('query:' + str(queryset))\n        serializer_class = ProductSerializer # JSON 으로 ���싱하는 과정이다.\n        MatchProductId=ProductModel.objects.get(ProductId=requestData)\n    \n        result['items'] = MatchProductId.ProductId\n        result['price'] = MatchProductId.ProductPrice\n        #return JsonResponse(result)\n        return HttpResponse(\"프린트값: \"+ str(result))\n        \n        \n####################################################################\n\n\ndef testStrDef(request):\n    rr=request.GET.get(\"id\");\n    return HttpResponse(\"성공 : \"+ str(rr) + \" <-리퀘스트의 값 \")\n    \ndef testJsonDef(request):\n    return JsonResponse({\n            'message' : '안녕 파이썬 장고',\n            'items' : ['파이썬', '장고', 'AWS', 'EC2'],\n        }, json_dumps_params = {'ensure_ascii': True})\n        \ndef testProductDef(request):\n    return JsonResponse({\n            'message' : '상품페이지',\n            'items' : 'A상품',\n        }, json_dumps_params = {'ensure_ascii': True})\n    \n        \n        \n####################################################################","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":3162.359375,"scrollleft":0,"selection":{"start":{"row":201,"column":8},"end":{"row":201,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":214,"state":"start","mode":"ace/mode/python"}},"timestamp":1570779617913}